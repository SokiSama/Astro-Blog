--- 
import { getCollection } from 'astro:content';
import WidgetLayout from "./WidgetLayout.astro";

const posts = await getCollection('posts');

const postCount = posts.length;
const tags = new Set();
const categories = new Set();
let totalWords = 0;

posts.forEach(post => {
  if (post.data.tags) {
    post.data.tags.forEach(tag => {
      tags.add(tag);
    });
  }
  if (post.data.category) {
    categories.add(post.data.category);
  }
  if (post.body) {
    totalWords += post.body.split(/\s+/).length;
  }
});

const totalWordsInWan = (totalWords / 10000).toFixed(1);
---

<link
  href="https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded"
  rel="stylesheet"
/>

<style>
  .material-symbols-rounded {
    font-variation-settings: 'FILL' 1, 'wght' 400, 'GRAD' 0, 'opsz' 24;
    font-size: 1.8rem;
    margin-right: 0.75rem;
  }

  .stats-grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 0.75rem;
  }

  .stat-card {
    border-radius: 12px;
    padding: 0.75rem;
    display: flex;
    align-items: center;
    transition: all 0.25s ease;
    background-color: var(--card-bg-color);
    color: var(--card-text-color);
  }

  html.dark .stat-card {
    background-color: transparent;
    color: white;
  }
  .running-time-card {
    grid-column: 1 / -1;
  }
</style>

<WidgetLayout id="blog-stats">
  <div class="stats-grid">
    {/** 文章数 */}
    <div class="stat-card">
      <span class="material-symbols-rounded">description</span>
      <div>
        <div class="text-sm">文章数</div>
        <div class="text-lg font-semibold">{postCount}</div>
      </div>
    </div>

    {/** 标签数 */}
    <div class="stat-card">
      <span class="material-symbols-rounded">label_important</span>
      <div>
        <div class="text-sm">标签数</div>
        <div class="text-lg font-semibold">{tags.size}</div>
      </div>
    </div>

    {/** 分类数 */}
    <div class="stat-card">
      <span class="material-symbols-rounded">folder</span>
      <div>
        <div class="text-sm">分类数</div>
        <div class="text-lg font-semibold">{categories.size}</div>
      </div>
    </div>

    {/** 总字数 */}
    <div class="stat-card">
      <span class="material-symbols-rounded">edit</span>
      <div>
        <div class="text-sm">总字数</div>
        <div class="text-lg font-semibold">{totalWordsInWan} 万</div>
      </div>
    </div>

    {/** 网站运行时间 */}
    <div class="stat-card running-time-card">
      <span class="material-symbols-rounded">schedule</span>
      <div>
        <div class="text-sm">本站已运行</div>
        <div id="running-time" class="text-lg font-semibold"></div>
      </div>
    </div>
  </div>
</WidgetLayout>

<script>
  function updateRunningTime() {
    const startTime = new Date('2025-10-09T00:00:00+08:00');
    const now = new Date();
    const diff = now.getTime() - startTime.getTime();

    const d = Math.floor(diff / (1000 * 60 * 60 * 24));
    const h = Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
    const m = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));
    const s = Math.floor((diff % (1000 * 60)) / 1000);

    const runningTime = `${d} 天 ${h} 时 ${m} 分 ${s} 秒`;
    const runningTimeElement = document.getElementById('running-time');
    if (runningTimeElement) {
      runningTimeElement.innerHTML = runningTime;
    }
  }

  setInterval(updateRunningTime, 1000);
  updateRunningTime();
</script>